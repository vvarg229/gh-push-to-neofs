name: 'Publish to NeoFS Github Action'
description: 'This action allows you to publish files, tests reports, static web pages and etc. to NeoFS'
author: 'Neo SPCC'
branding:
  icon: 'server'
  color: 'green'
inputs:
  NEOFS_WALLET:
    description: N3 wallet for NeoFS network access
    required: true
  NEOFS_WALLET_PASSWORD:
    description: N3 wallet password
    required: true
  NEOFS_NETWORK_DOMAIN:
    description: Rpc endpoint domain address
    required: false
    default: 'st1.storage.fs.neo.org'
  NEOFS_HTTP_GATE:
    description: HTTP Gateway domain address
    required: false
    default: 'http.fs.neo.org'
  STORE_OBJECTS_CID:
    description: Container ID for your data
    required: true
  PATH_TO_FILES_DIR:
    description: Path to the directory with the files to be pushed
    required: true
  RUN_ID:
    description: Run ID
    required: true
  PR_EXPIRATION_PERIOD:
    description: Expiration period for PRs in epochs
    required: false
    default: 0
  MASTER_EXPIRATION_PERIOD:
    description: Expiration period for master branch in epochs
    required: false
    default: 0
  MANUAL_RUN_EXPIRATION_PERIOD:
    description: Expiration period for manual runs in epochs
    required: false
    default: 0
  OTHER_EXPIRATION_PERIOD:
    description: Expiration period for other events in epochs
    required: false
    default: 0

outputs:
  OUTPUT_CONTAINER_URL:
    description: Container URL
    value: ${{ steps.put_files.outputs.container_url }}

runs:
  using: composite
  steps:
    - name: Download latest stable neofs-cli for uploading reports to NeoFS
      uses: dsaltares/fetch-gh-release-asset@1.1.1
      with:
        repo: 'nspcc-dev/neofs-node'
        version: 'tags/v0.38.1'
        file: 'neofs-cli-amd64'
        target: 'neofs/neofs-cli'

    - name: Chmod latest stable neofs-cli
      shell: bash
      if: runner.os == 'Linux'
      run: |
        sudo chmod a+x neofs-cli
      working-directory: neofs

    - name: Enable stable neofs-cli
      shell: bash
      if: always()
      run: |
        echo "$(pwd)" >> $GITHUB_PATH
      working-directory: neofs

    - name: Create wallet
      shell: bash
      env:
        NEOFS_WALLET: ${{ inputs.NEOFS_WALLET }}
      run: |
        echo "$NEOFS_WALLET" | base64 -d > wallet.json

    - name: Define expiration
      shell: bash
      env:
        NEOFS_NETWORK_DOMAIN: ${{ inputs.NEOFS_NETWORK_DOMAIN }}
        MASTER_EXPIRATION_PERIOD: ${{ inputs.MASTER_EXPIRATION_PERIOD }}
        PR_EXPIRATION_PERIOD: ${{ inputs.PR_EXPIRATION_PERIOD }}
        MANUAL_RUN_EXPIRATION_PERIOD: ${{ inputs.MANUAL_RUN_EXPIRATION_PERIOD }}
        OTHER_EXPIRATION_PERIOD: ${{ inputs.OTHER_EXPIRATION_PERIOD }}
      run: |
        CURRENT_EPOCH=$(neofs-cli netmap epoch --rpc-endpoint $NEOFS_NETWORK_DOMAIN:8080)
        if [[ "${{ github.event_name }}" == "push" ]]; then
          EXP_EPOCH=$((MASTER_EXPIRATION_PERIOD + CURRENT_EPOCH))
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          EXP_EPOCH=$((PR_EXPIRATION_PERIOD + CURRENT_EPOCH))
        elif [[ "${{ github.event_name }}" == "release" ]]; then
          EXP_EPOCH=0 # For test reports from releases - no expiration period
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          EXP_EPOCH=$((MANUAL_RUN_EXPIRATION_PERIOD + CURRENT_EPOCH))
        else
          EXP_EPOCH=$((OTHER_EXPIRATION_PERIOD + CURRENT_EPOCH))
        fi
        if [[ "$EXP_EPOCH" -eq "$CURRENT_EPOCH" ]]; then
          EXP_EPOCH=0 # 0 is no expiration period
        fi
        echo "EXP_EPOCH=$EXP_EPOCH" >> $GITHUB_ENV

    - name: Prepare venv
      shell: bash
      id: prepare_venv
      run: |
        python3 -m venv venv
        source venv/bin/activate && pip install -r requirements.txt

    - name: Put files to NeoFS
      shell: bash
      id: put_files
      env:
        NEOFS_WALLET_PASSWORD: ${{ inputs.NEOFS_WALLET_PASSWORD }}
        NEOFS_NETWORK_DOMAIN: ${{ inputs.NEOFS_NETWORK_DOMAIN }}
        STORE_OBJECTS_CID: ${{ inputs.STORE_OBJECTS_CID }}
        NEOFS_HTTP_GATE: ${{ inputs.NEOFS_HTTP_GATE }}
        PATH_TO_FILES_DIR: ${{ inputs.PATH_TO_FILES_DIR }}
        RUN_ID: ${{ inputs.RUN_ID }}
      run: |
        source venv/bin/activate && NEOFS_CLI_PASSWORD=$NEOFS_WALLET_PASSWORD python ./push-to-neofs.py \
        --expire-at "$EXP_EPOCH" --neofs_domain "$NEOFS_NETWORK_DOMAIN" --run_id "$RUN_ID" \
        --cid "$STORE_OBJECTS_CID" --files-dir "$PATH_TO_FILES_DIR" --wallet wallet.json
        echo "::set-output name=container_url::https://$NEOFS_HTTP_GATE/$STORE_OBJECTS_CID/$RUN_ID"
        echo "https://$NEOFS_HTTP_GATE/$STORE_OBJECTS_CID/$RUN_ID"
